/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <15 29>;
        };

        combo_2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <16 30>;
        };

        combo_3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <17 31>;
        };

        combo_4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <18 32>;
        };

        combo_5 {
            bindings = <&kp NUMBER_5>;
            key-positions = <19 33>;
        };

        combo_6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <22 40>;
        };

        combo_7 {
            bindings = <&kp NUMBER_7>;
            key-positions = <41 23>;
        };

        combo_8 {
            bindings = <&kp NUMBER_8>;
            key-positions = <24 42>;
        };

        combo_9 {
            bindings = <&kp NUMBER_9>;
            key-positions = <25 43>;
        };

        combo_0 {
            bindings = <&kp NUMBER_0>;
            key-positions = <26 44>;
        };

        combo_excl {
            bindings = <&kp EXCL>;
            key-positions = <29 47>;
        };

        combo_at {
            bindings = <&kp AT>;
            key-positions = <30 48>;
        };

        combo_pound {
            bindings = <&kp POUND>;
            key-positions = <31 49>;
        };

        combo_dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <32 50>;
        };

        combo_percent {
            bindings = <&kp PERCENT>;
            key-positions = <33 51>;
        };

        combo_caret {
            bindings = <&kp CARET>;
            key-positions = <40 54>;
        };

        combo_ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <41 55>;
        };

        combo_asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <42 56>;
        };

        combo_left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <43 57>;
        };

        combo_right_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <44 58>;
        };

        combo_dot {
            bindings = <&kp DOT>;
            key-positions = <32 31>;
        };

        combo_backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <32 30>;
        };

        combo_colon {
            bindings = <&kp COLON>;
            key-positions = <32 29>;
        };

        combo_underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <31 30>;
        };

        combo_hr_exclam {
            bindings = <&kp EXCLAMATION>;
            key-positions = <31 29>;
        };

        combo_hr_sqt {
            bindings = <&kp APOSTROPHE>;
            key-positions = <29 30>;
        };

        combo_hr_comma {
            bindings = <&kp COMMA>;
            key-positions = <41 42>;
        };

        combo_slash {
            bindings = <&kp SLASH>;
            key-positions = <41 43>;
        };

        combo_hr_semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <41 44>;
        };

        combo_hr_minus {
            bindings = <&kp MINUS>;
            key-positions = <42 43>;
        };

        combo_hr_question_mark {
            bindings = <&kp QUESTION>;
            key-positions = <42 44>;
        };

        combo_hr_double_quotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <43 44>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1          &kp N2          &kp N3              &kp N4        &kp N5     &tog 1                                                       &mo 3          &kp N6  &kp N7             &kp N8               &kp N9          &kp N0           &kp MINUS
&kp TAB    &kp COMMA       &kp Q           &kp U               &kp DOT       &kp GRAVE  &none                                                        &none          &kp K   &kp G              &kp P                &kp C           &kp W            &kp BSLH
&kp ESC    &hm LEFT_GUI A  &hm LEFT_ALT O  &hm LEFT_CONTROL E  &hm LSHIFT I  &kp P      &none      &kp LCTRL  &kp LALT       &kp LGUI    &kp RCTRL   &none          &kp M   &hm RIGHT_SHIFT T  &hm RIGHT_CONTROL N  &hm LEFT_ALT S  &hm RIGHT_GUI R  &kp SQT
&kp LSHFT  &kp SLASH       &kp X           &hm RIGHT_ALT Z     &kp Y         &kp J                            &kp GRAVE      &kp T                                  &kp B   &kp D              &hm RIGHT_ALT L      &kp F           &kp V            &kp RSHFT
&mo 2      &kp HOME        &kp END         &kp LEFT            &kp RIGHT                &kp SPACE  &kp TAB    &kp ESC        &kp RETURN  &kp DELETE  &kp BACKSPACE          &kp UP             &kp DOWN             &kp PG_UP       &kp PG_DN        &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
