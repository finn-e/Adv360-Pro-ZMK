/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            /* Another possibility:
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
*/
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_vert_UH_N1 {
            bindings = <&kp N1>;
            key-positions = <15 29>;
        };

        combo_vert_UH_N2 {
            bindings = <&kp N2>;
            key-positions = <16 30>;
        };

        combo_vert_UH_N3 {
            bindings = <&kp N3>;
            key-positions = <17 31>;
        };

        combo_vert_UH_N4 {
            bindings = <&kp N4>;
            key-positions = <18 32>;
        };

        combo_vert_UH_N5 {
            bindings = <&kp N5>;
            key-positions = <19 33>;
        };

        combo_vert_UH_N6 {
            bindings = <&kp N6>;
            key-positions = <22 40>;
        };

        combo_vert_UH_N7 {
            bindings = <&kp N7>;
            key-positions = <23 41>;
        };

        combo_vert_UH_N8 {
            bindings = <&kp N8>;
            key-positions = <24 42>;
        };

        combo_vert_UH_N9 {
            bindings = <&kp N9>;
            key-positions = <25 43>;
        };

        combo_vert_UH_N0 {
            bindings = <&kp N0>;
            key-positions = <26 44>;
        };

        combo_vert_HL_exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <29 47>;
        };

        combo_vert_HL_at {
            bindings = <&kp AT>;
            key-positions = <30 48>;
        };

        combo_vert_HL_hash {
            bindings = <&kp HASH>;
            key-positions = <31 49>;
        };

        combo_vert_HL_dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <32 50>;
        };

        combo_vert_HL_percent {
            bindings = <&kp PERCENT>;
            key-positions = <33 51>;
        };

        combo_vert_HL_caret {
            bindings = <&kp CARET>;
            key-positions = <40 54>;
        };

        combo_vert_HL_ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <55 41>;
        };

        combo_vert_HL_asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <56 42>;
        };

        combo_vert_HL_lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <57 43>;
        };

        combo_vert_HL_rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <44 58>;
        };

        combo_less {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LT>;
        };

        combo_plus {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp PLUS>;
        };

        combo_minus {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp MINUS>;
        };

        combo_lbrace {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp LBRC>;
        };

        combo_rbrace {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp RBRC>;
        };

        combo_multiply {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp STAR>;
        };

        combo_divide {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp FSLH>;
        };

        combo_more {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp GT>;
        };

        combo_hrsqt {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&kp SQT>;
        };

        comma_hrexclamation {
            timeout-ms = <50>;
            key-positions = <29 31>;
            bindings = <&kp EXCLAMATION>;
        };

        combo_hrcolon {
            timeout-ms = <50>;
            key-positions = <29 32>;
            bindings = <&kp COLON>;
        };

        combo_hrunder {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp UNDER>;
        };

        combo_hrbslh {
            timeout-ms = <50>;
            key-positions = <32 30>;
            bindings = <&kp BSLH>;
        };

        combo_hrdot {
            timeout-ms = <50>;
            key-positions = <32 31>;
            bindings = <&kp DOT>;
        };

        combo_hrlpar {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp LPAR>;
        };

        combo_hrrpar {
            timeout-ms = <50>;
            key-positions = <41 40>;
            bindings = <&kp RPAR>;
        };

        combo_hrcomma {
            timeout-ms = <50>;
            key-positions = <41 42>;
            bindings = <&kp COMMA>;
        };

        comma_hrfslh {
            timeout-ms = <50>;
            key-positions = <43 41>;
            bindings = <&kp FSLH>;
        };

        comma_hrsemi {
            timeout-ms = <50>;
            key-positions = <41 44>;
            bindings = <&kp SEMI>;
        };

        combo_hrdash {
            timeout-ms = <50>;
            key-positions = <42 43>;
            bindings = <&kp MINUS>;
        };

        combo_hrqmark {
            timeout-ms = <50>;
            key-positions = <42 44>;
            bindings = <&kp QMARK>;
        };

        combo_hrdqt {
            timeout-ms = <50>;
            key-positions = <44 43>;
            bindings = <&kp DQT>;
        };

        combo_cut {
            timeout-ms = <50>;
            key-positions = <47 48>;
            bindings = <&kp LC(X)>;
        };

        combo_copy {
            timeout-ms = <50>;
            key-positions = <48 49>;
            bindings = <&kp LC(C)>;
        };

        combo_paste {
            timeout-ms = <50>;
            key-positions = <49 50>;
            bindings = <&kp LC(V)>;
        };

        combo_lbraket {
            timeout-ms = <50>;
            key-positions = <51 50>;
            bindings = <&kp LBKT>;
        };

        combo_rbraket {
            timeout-ms = <50>;
            key-positions = <54 55>;
            bindings = <&kp RBKT>;
        };

        combo_equal {
            timeout-ms = <50>;
            key-positions = <55 56>;
            bindings = <&kp EQUAL>;
        };

        combo_undo {
            timeout-ms = <50>;
            key-positions = <56 57>;
            bindings = <&kp LC(Z)>;
        };

        combo_redo {
            timeout-ms = <50>;
            key-positions = <57 58>;
            bindings = <&kp LS(LC(Z))>;
        };

        combo_dashspace {
            timeout-ms = <50>;
            key-positions = <66 67>;
            bindings = <&kp MINUS>;
        };

        combo_underspace {
            timeout-ms = <50>;
            key-positions = <66 65>;
            bindings = <&kp UNDER>;
        };

        combo_thumbs_thorn {
            timeout-ms = <50>;
            key-positions = <69 70>;
            bindings = <&thorn>;
        };

        combo_thumbs_right_inner {
            bindings = <&none>;
            key-positions = <69 68>;
        };

        combo_all_left_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <31 30 32>;
        };

        combo_all_rite {
            bindings = <&kp BACKSPACE>;
            key-positions = <41 42 43>;
        };
    };

    macros {
        thorn: thorn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp T &kp H>;

            label = "THORN";
        };

        double0: double0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N0>;
            label = "DOUBLE0";
        };

        ht: ht {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp T>;
            label = "HT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 7 ESCAPE  &kp N1          &kp N2          &kp N3              &kp N4            &kp N5       &tog 6                                                                    &tog 7   &kp N6  &kp N7             &kp N8               &kp N9           &kp N0           &lt 7 BACKSPACE
&kp TAB       &caps_word      &kp BACKSPACE   &lt 6 RETURN        &kp DELETE        &kp TAB      &tog 1                                                                    &tog 3   &kp W   &kp Y              &lt 6 L              &kp C            &kp P            &kp RETURN
&caps_word    &hm LEFT_GUI A  &hm LEFT_ALT I  &hm LEFT_CONTROL O  &hm LEFT_SHIFT E  &key_repeat  &tog 2   &kp LCTRL    &kp LALT                 &kp LEFT_META  &kp ESCAPE  &tog 4   &kp F   &hm RIGHT_SHIFT S  &hm RIGHT_CONTROL R  &hm LEFT_ALT D   &hm RIGHT_GUI N  &lt 5 P
&kp LS(TAB)   &lt 5 Q         &kp J           &kp K               &lt 7 U           &kp GRAVE                          &lt 6 K_APPLICATION      &ht                                 &kp V   &lt 7 G            &kp M                &hm RIGHT_ALT B  &kp UP_ARROW     &kp TAB
&tog 5        &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP         &kp END                        &lt 7 X  &lt 5 SPACE  &lt 6 Z                  &key_repeat    &lt 7 T     &lt 6 H          &none              &none                &kp LEFT_ARROW   &kp DOWN_ARROW   &kp RIGHT_ARROW
            >;
        };

        layer_august {
            bindings = <
&lt 7 ESCAPE  &kp N1          &kp N2           &kp N3              &kp N4            &kp N5     &trans                                                                             &trans   &kp N6  &kp N7             &kp N8               &kp N9           &kp N0           &lt 7 BACKSPACE
&kp TAB       &caps_word      &kp Q            &lt 6 U             &key_repeat       &kp TILDE  &trans                                                                             &trans   &kp K   &kp G              &lt 6 H              &kp C            &kp V            &kp BSLH
&caps_word    &hm LEFT_GUI A  &hm LEFT_ALT O   &hm LEFT_CONTROL E  &hm LEFT_SHIFT I  &kp P      &trans       &kp LCTRL  &kp LALT                 &kp LEFT_META  &kp RIGHT_CONTROL  &trans   &kp M   &hm RIGHT_SHIFT T  &hm RIGHT_CONTROL N  &hm LEFT_ALT S   &hm RIGHT_GUI R  &kp W
&kp LSHFT     &key_repeat     &hm RIGHT_ALT X  &kp Z               &lt 6 Y           &kp J                              &lt 6 K_APPLICATION      &ht                                        &kp B   &kp D              &kp L                &hm RIGHT_ALT F  &kp UP_ARROW     &kp RSHFT
&tog 6        &kp HOME        &kp PAGE_DOWN    &kp PAGE_UP         &kp END                      &lt 6 SPACE  &lt 7 TAB  &kp RETURN               &kp RET        &lt 7 T            &lt 6 H          &tog 6             &sl 6                &kp LEFT_ARROW   &kp DOWN_ARROW   &kp RIGHT_ARROW
            >;
        };

        layer_typing {
            bindings = <
&trans  &kp NUMBER_1  &kp N2  &kp N3  &kp N4  &kp N5       &trans                                         &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &caps_word    &kp Q   &kp U   &kp Y   &kp TAB      &trans                                         &trans  &kp W   &kp Y   &kp L   &kp C   &kp P   &trans
&trans  &kp A         &kp I   &kp O   &kp E   &key_repeat  &trans  &trans     &trans      &trans  &trans  &trans  &kp F   &kp S   &kp R   &kp D   &kp N   &trans
&trans  &kp Q         &kp J   &kp K   &kp U   &kp GRAVE                       &trans      &trans                  &kp V   &kp G   &kp M   &kp B   &trans  &trans
&trans  &trans        &trans  &trans  &trans               &kp X   &kp SPACE  &kp Z       &trans  &kp T   &kp H           &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_qwerty {
            bindings = <
&kp EQUAL       &kp N1     &kp N2        &kp N3    &kp N4     &kp N5  &trans                                      &trans  &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB         &kp Q      &kp W         &kp E     &kp R      &kp T   &trans                                      &trans  &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BACKSLASH
&kp ESC         &kp A      &kp S         &kp D     &kp F      &kp G   &trans  &trans  &trans      &trans  &trans  &trans  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z      &kp X         &kp C     &kp V      &kp B                   &trans      &trans                  &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RIGHT_SHIFT
&trans          &kp GRAVE  &kp CAPSLOCK  &kp LEFT  &kp RIGHT          &trans  &trans  &trans      &trans  &trans  &trans          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &trans
            >;
        };

        layer_small_kbd_mask {
            bindings = <
&none   &none   &none   &none   &none   &none   &trans                                      &trans  &none   &none   &none   &none   &none   &none
&none   &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &none
&none   &trans  &trans  &trans  &trans  &trans  &trans  &none   &none       &none   &none   &trans  &trans  &trans  &trans  &trans  &trans  &none
&none   &trans  &trans  &trans  &trans  &trans                  &none       &none                   &trans  &trans  &trans  &trans  &trans  &none
&trans  &none   &none   &none   &none           &trans  &trans  &trans      &trans  &trans  &trans          &none   &none   &none   &none   &trans
            >;
        };

        layer_keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans       &trans  &kp KP_NUM    &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &trans  &kp A   &kp B   &kp C   &kp A   &bootloader                                       &bootloader  &kp D   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp KP_MINUS     &trans
&trans  &trans  &kp D   &kp E   &kp F   &kp B   &sys_reset   &trans  &trans      &trans   &trans  &sys_reset   &kp E   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &kp C                        &trans      &trans                        &kp F   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp KP_ENTER     &trans
&trans  &trans  &trans  &trans  &trans          &trans       &trans  &trans      &kp DOT  &kp N0  &double0             &kp DOT       &kp N0        &double0       &trans           &trans
            >;
        };

        layer_fn {
            bindings = <
&trans  &trans   &trans   &trans   &trans   &trans      &trans                                                           &trans       &trans           &trans             &trans      &trans      &trans      &trans
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5      &bootloader                                                      &bootloader  &kp F6           &kp F7             &kp F8      &kp F9      &kp F10     &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15     &sys_reset   &trans         &trans          &trans   &trans      &sys_reset   &kp F16          &kp F17            &kp F18     &kp F19     &kp F20     &trans
&trans  &kp F21  &kp F22  &kp F23  &kp F24  &kp C_MUTE                              &trans          &trans                            &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &bl BL_INC  &bl BL_DEC  &bl BL_TOG  &trans
&trans  &trans   &trans   &trans   &trans               &kp ESCAPE   &kp BACKSPACE  &kp DELETE      &kp TAB  &kp RETURN  &kp ESCAPE                    &trans             &trans      &trans      &trans      &trans
            >;
        };

        layer_vimnav {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans        &trans                                                           &trans       &trans        &trans     &trans     &trans     &trans     &trans
&trans  &kp END    &kp PG_DN  &kp PG_UP  &kp HOME   &bt BT_SEL 0  &bootloader                                                      &bootloader  &bt BT_SEL 1  &kp END    &kp PG_UP  &kp PG_DN  &kp HOME   &trans
&trans  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &bt BT_SEL 2  &sys_reset   &trans         &trans          &trans   &trans      &sys_reset   &bt BT_SEL 3  &kp LEFT   &kp UP     &kp DOWN   &kp RIGHT  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &bt BT_CLR                                &trans          &trans                            &bt BT_CLR    &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)  &trans
&trans  &trans     &trans     &trans     &trans                   &kp ESCAPE   &kp BACKSPACE  &kp DELETE      &kp TAB  &kp RETURN  &kp ESCAPE                 &trans     &trans     &trans     &trans     &trans
            >;
        };
    };
};
